!function(){"use strict";function isFunction(any){return"function"==typeof any}!function(LogLevel){LogLevel.Debug="Debug",LogLevel.Info="Info",LogLevel.Warning="Warning",LogLevel.Error="Error"}(LogLevel=LogLevel||{}),function(MraidEvent){MraidEvent.Ready="ready",MraidEvent.Error="error",MraidEvent.StateChange="stateChange",MraidEvent.ViewableChange="viewableChange"}(MraidEvent=MraidEvent||{});var LogLevel,MraidEvent,MraidState,MraidPlacementType,EventsCoordinator=function(){function EventsCoordinator(sdkInteractor){this.eventListeners=new Map(Object.values(MraidEvent).map(function(e){return[e,new Set]})),this.sdkInteractor=sdkInteractor}return EventsCoordinator.prototype.addEventListener=function(event,listener){var _a;event&&this.isCorrectEvent(event)?listener?isFunction(listener)?null!=(_a=this.eventListeners.get(event))&&_a.add(listener):this.sdkInteractor.log(LogLevel.Error,"Incorrect listener when addEventListener. \n        Listener is not a function. Actual type = ".concat(typeof listener)):this.sdkInteractor.log(LogLevel.Error,"Incorrect listener when addEventListener. It is null or undefined"):this.sdkInteractor.log(LogLevel.Error,"Incorrect event when addEventListener.Type = ".concat(typeof event,", value = ").concat(event))},EventsCoordinator.prototype.removeEventListener=function(event,listener){var listeners;event&&this.isCorrectEvent(event)?listener&&!isFunction(listener)?this.sdkInteractor.log(LogLevel.Error,"Incorrect listener when removeEventListener. \n        Listener is not a function. Actual type = ".concat(typeof listener)):(listeners=this.eventListeners.get(event),listener?null!=listeners&&listeners.delete(listener):null!=listeners&&listeners.clear()):this.sdkInteractor.log(LogLevel.Error,"Incorrect event when removeEventListener.Type = ".concat(typeof event,", value = ").concat(event))},EventsCoordinator.prototype.fireReadyEvent=function(){var _a;null!=(_a=this.eventListeners.get(MraidEvent.Ready))&&_a.forEach(function(value){null!=value&&value()})},EventsCoordinator.prototype.fireErrorEvent=function(message,action){var _a;null!=(_a=this.eventListeners.get(MraidEvent.Error))&&_a.forEach(function(value){null!=value&&value(message,action)})},EventsCoordinator.prototype.fireStateChangeEvent=function(newState){var _a;null!=(_a=this.eventListeners.get(MraidEvent.StateChange))&&_a.forEach(function(value){null!=value&&value(newState)})},EventsCoordinator.prototype.fireViewableChangeEvent=function(isViewable){var _a;null!=(_a=this.eventListeners.get(MraidEvent.ViewableChange))&&_a.forEach(function(value){null!=value&&value(isViewable)})},EventsCoordinator.prototype.isCorrectEvent=function(event){return event&&this.eventListeners.has(event)},EventsCoordinator}(),ExpandProperties=function(width,height,useCustomClose,isModal){this.width=width,this.height=height,this.useCustomClose=useCustomClose,this.isModal=isModal},MRAIDImplementation=(!function(MraidState){MraidState.Loading="loading",MraidState.Default="default",MraidState.Expanded="expanded",MraidState.Hidden="hidden"}(MraidState=MraidState||{}),!function(MraidPlacementType){MraidPlacementType.Unknown="",MraidPlacementType.Inline="inline",MraidPlacementType.Interstitial="interstitial"}(MraidPlacementType=MraidPlacementType||{}),function(){function MRAIDImplementation(eventsCoordinator,sdkInteractor){this.currentState=MraidState.Loading,this.placementType=MraidPlacementType.Unknown,this.isCurrentlyViewable=!1,this.eventsCoordinator=eventsCoordinator,this.sdkInteractor=sdkInteractor}return MRAIDImplementation.prototype.getVersion=function(){return"1.0"},MRAIDImplementation.prototype.addEventListener=function(event,listener){try{this.eventsCoordinator.addEventListener(event,listener)}catch(e){this.sdkInteractor.log(LogLevel.Error,"Error when addEventListener, event = ".concat(event,", listenerType = ").concat(typeof listener))}},MRAIDImplementation.prototype.removeEventListener=function(event,listener){try{this.eventsCoordinator.removeEventListener(event,listener)}catch(e){this.sdkInteractor.log(LogLevel.Error,"Error when removeEventListener, event = ".concat(event,", listenerType = ").concat(typeof listener))}},MRAIDImplementation.prototype.getState=function(){return this.currentState},MRAIDImplementation.prototype.getPlacementType=function(){return this.placementType},MRAIDImplementation.prototype.isViewable=function(){return this.isCurrentlyViewable},MRAIDImplementation.prototype.expand=function(url){},MRAIDImplementation.prototype.getExpandProperties=function(){return new ExpandProperties(1,1,!1,!1)},MRAIDImplementation.prototype.setExpandProperties=function(properties){},MRAIDImplementation.prototype.close=function(){},MRAIDImplementation.prototype.useCustomClose=function(useCustomClose){},MRAIDImplementation.prototype.open=function(url){url?"string"==typeof url?this.sdkInteractor.open(url):this.sdkInteractor.log(LogLevel.Error,"Error when open(), url is not a string"):this.sdkInteractor.log(LogLevel.Error,"Error when open(), url is null, empty or undefined")},MRAIDImplementation.prototype.notifyReady=function(placementType){this.sdkInteractor.log(LogLevel.Debug,"notifyReady(), placementType=".concat(placementType),null),this.placementType=placementType,this.setReady()},MRAIDImplementation.prototype.notifyError=function(message,action){this.eventsCoordinator.fireErrorEvent(message,action)},MRAIDImplementation.prototype.setIsViewable=function(isViewable){this.sdkInteractor.log(LogLevel.Debug,"setIsViewable(), isViewable=".concat(isViewable),null),this.isCurrentlyViewable!==isViewable&&(this.isCurrentlyViewable=isViewable,this.eventsCoordinator.fireViewableChangeEvent(isViewable))},MRAIDImplementation.prototype.updateState=function(newState){this.currentState=newState,this.eventsCoordinator.fireStateChangeEvent(newState)},MRAIDImplementation.prototype.setReady=function(){this.currentState===MraidState.Loading&&(this.updateState(MraidState.Default),this.eventsCoordinator.fireReadyEvent())},MRAIDImplementation}()),IosMraidBridge=function(){function IosMraidBridge(){}return IosMraidBridge.prototype.log=function(logLevel,message,logId){this.postMessage({action:"log",logLevel:logLevel,message:message,logId:logId})},IosMraidBridge.prototype.open=function(url){this.postMessage({action:"open",url:url})},IosMraidBridge.prototype.postMessage=function(message){var _a;null!=(_a=null==(_a=null==(_a=null===window||void 0===window?void 0:window.webkit)?void 0:_a.messageHandlers)?void 0:_a.criteoMraidBridge)&&_a.postMessage(message)},IosMraidBridge}(),AndroidMraidBridge=function(){function AndroidMraidBridge(){}return AndroidMraidBridge.prototype.log=function(logLevel,message,logId){var _a;null!=(_a=null===window||void 0===window?void 0:window.criteoMraidBridge)&&_a.log(logLevel,message,logId)},AndroidMraidBridge.prototype.open=function(url){var _a;null!=(_a=null===window||void 0===window?void 0:window.criteoMraidBridge)&&_a.open(url)},AndroidMraidBridge}(),IosMraidBridge=new(function(){function SdkInteractor(bridges){this.bridges=bridges}return SdkInteractor.prototype.log=function(logLevel,message,logId){void 0===logId&&(logId=null),this.callForAll(function(bridge){bridge.log(logLevel,message,logId)})},SdkInteractor.prototype.open=function(url){this.callForAll(function(bridge){bridge.open(url)})},SdkInteractor.prototype.callForAll=function(lambda){this.bridges.forEach(function(bridge){lambda(bridge)})},SdkInteractor}())([new IosMraidBridge,new AndroidMraidBridge]);window.mraid=null!=(AndroidMraidBridge=window.mraid)?AndroidMraidBridge:new MRAIDImplementation(new EventsCoordinator(IosMraidBridge),IosMraidBridge)}();